version: '3.9'

services:
  frontend:
    build:
      context: ./udagram-frontend
      dockerfile: Dockerfile
    env_file:
      - ./udagram-frontend/.env
    ports:
      - ${FRONTEND_PORT}:80
    depends_on:
      - reverseproxy

  reverseproxy:
    build:
      context: ./udagram-reverseproxy
      dockerfile: Dockerfile
    env_file:
      - ./udagram-reverseproxy/.env
    ports:
      - ${REVERSEPROXY_PORT}:8080
    restart: unless-stopped
    depends_on:
      - backend-feed
      - backend-user

  backend-feed:
    build:
      context: ./udagram-api-feed
      dockerfile: Dockerfile
    environment:
      - PORT=80
    env_file:
      - ./udagram-api-feed/.env
    volumes:
      - $HOME/.aws:/root/.aws:ro
    depends_on:
      - pg-feed

  backend-user:
    build:
      context: ./udagram-api-user
      dockerfile: Dockerfile
    environment:
      - PORT=80
    env_file:
      - ./udagram-api-user/.env
    depends_on:
      - pg-user

  pg-feed:
    image: postgres:14-alpine3.15
    restart: unless-stopped
    env_file:
      - ./udagram-api-feed/.env
    volumes:
      - pgdatafeed:/var/lib/postgresql/data

  pg-user:
    image: postgres:14-alpine3.15
    restart: unless-stopped
    env_file:
      - ./udagram-api-user/.env
    volumes:
      - pgdatauser:/var/lib/postgresql/data

  adminer-pg:
    image: adminer:4.8.1-standalone
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      - pg-feed
      - pg-user

volumes:
  pgdatafeed:
  pgdatauser:
